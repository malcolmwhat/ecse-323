|g14_rotor_stepper_test_bed
clock => pulse_generator:pulse_gen.clock
clock => g14_rotor_stepper:rotor_stepper_fsm.clk
clock => g14_counter_with_load:left_counter.clk
clock => g14_counter_with_load:middle_counter.clk
clock => g14_counter_with_load:right_counter.clk
init => g14_rotor_stepper:rotor_stepper_fsm.init
seven_seg_l[0] <= g14_7_segment_decoder:left_led_out.segments[0]
seven_seg_l[1] <= g14_7_segment_decoder:left_led_out.segments[1]
seven_seg_l[2] <= g14_7_segment_decoder:left_led_out.segments[2]
seven_seg_l[3] <= g14_7_segment_decoder:left_led_out.segments[3]
seven_seg_l[4] <= g14_7_segment_decoder:left_led_out.segments[4]
seven_seg_l[5] <= g14_7_segment_decoder:left_led_out.segments[5]
seven_seg_l[6] <= g14_7_segment_decoder:left_led_out.segments[6]
seven_seg_m[0] <= g14_7_segment_decoder:middle_led_out.segments[0]
seven_seg_m[1] <= g14_7_segment_decoder:middle_led_out.segments[1]
seven_seg_m[2] <= g14_7_segment_decoder:middle_led_out.segments[2]
seven_seg_m[3] <= g14_7_segment_decoder:middle_led_out.segments[3]
seven_seg_m[4] <= g14_7_segment_decoder:middle_led_out.segments[4]
seven_seg_m[5] <= g14_7_segment_decoder:middle_led_out.segments[5]
seven_seg_m[6] <= g14_7_segment_decoder:middle_led_out.segments[6]
seven_seg_r[0] <= g14_7_segment_decoder:right_led_out.segments[0]
seven_seg_r[1] <= g14_7_segment_decoder:right_led_out.segments[1]
seven_seg_r[2] <= g14_7_segment_decoder:right_led_out.segments[2]
seven_seg_r[3] <= g14_7_segment_decoder:right_led_out.segments[3]
seven_seg_r[4] <= g14_7_segment_decoder:right_led_out.segments[4]
seven_seg_r[5] <= g14_7_segment_decoder:right_led_out.segments[5]
seven_seg_r[6] <= g14_7_segment_decoder:right_led_out.segments[6]


|g14_rotor_stepper_test_bed|pulse_generator:pulse_gen
clock => LPM_COUNTER:down_counter.CLOCK
epulse <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|pulse_generator:pulse_gen|LPM_COUNTER:down_counter
clock => cntr_f2l:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_f2l:auto_generated.sload
data[0] => cntr_f2l:auto_generated.data[0]
data[1] => cntr_f2l:auto_generated.data[1]
data[2] => cntr_f2l:auto_generated.data[2]
data[3] => cntr_f2l:auto_generated.data[3]
data[4] => cntr_f2l:auto_generated.data[4]
data[5] => cntr_f2l:auto_generated.data[5]
data[6] => cntr_f2l:auto_generated.data[6]
data[7] => cntr_f2l:auto_generated.data[7]
data[8] => cntr_f2l:auto_generated.data[8]
data[9] => cntr_f2l:auto_generated.data[9]
data[10] => cntr_f2l:auto_generated.data[10]
data[11] => cntr_f2l:auto_generated.data[11]
data[12] => cntr_f2l:auto_generated.data[12]
data[13] => cntr_f2l:auto_generated.data[13]
data[14] => cntr_f2l:auto_generated.data[14]
data[15] => cntr_f2l:auto_generated.data[15]
data[16] => cntr_f2l:auto_generated.data[16]
data[17] => cntr_f2l:auto_generated.data[17]
data[18] => cntr_f2l:auto_generated.data[18]
data[19] => cntr_f2l:auto_generated.data[19]
data[20] => cntr_f2l:auto_generated.data[20]
data[21] => cntr_f2l:auto_generated.data[21]
data[22] => cntr_f2l:auto_generated.data[22]
data[23] => cntr_f2l:auto_generated.data[23]
data[24] => cntr_f2l:auto_generated.data[24]
cin => ~NO_FANOUT~
q[0] <= cntr_f2l:auto_generated.q[0]
q[1] <= cntr_f2l:auto_generated.q[1]
q[2] <= cntr_f2l:auto_generated.q[2]
q[3] <= cntr_f2l:auto_generated.q[3]
q[4] <= cntr_f2l:auto_generated.q[4]
q[5] <= cntr_f2l:auto_generated.q[5]
q[6] <= cntr_f2l:auto_generated.q[6]
q[7] <= cntr_f2l:auto_generated.q[7]
q[8] <= cntr_f2l:auto_generated.q[8]
q[9] <= cntr_f2l:auto_generated.q[9]
q[10] <= cntr_f2l:auto_generated.q[10]
q[11] <= cntr_f2l:auto_generated.q[11]
q[12] <= cntr_f2l:auto_generated.q[12]
q[13] <= cntr_f2l:auto_generated.q[13]
q[14] <= cntr_f2l:auto_generated.q[14]
q[15] <= cntr_f2l:auto_generated.q[15]
q[16] <= cntr_f2l:auto_generated.q[16]
q[17] <= cntr_f2l:auto_generated.q[17]
q[18] <= cntr_f2l:auto_generated.q[18]
q[19] <= cntr_f2l:auto_generated.q[19]
q[20] <= cntr_f2l:auto_generated.q[20]
q[21] <= cntr_f2l:auto_generated.q[21]
q[22] <= cntr_f2l:auto_generated.q[22]
q[23] <= cntr_f2l:auto_generated.q[23]
q[24] <= cntr_f2l:auto_generated.q[24]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g14_rotor_stepper_test_bed|pulse_generator:pulse_gen|LPM_COUNTER:down_counter|cntr_f2l:auto_generated
clock => counter_reg_bit[24].CLK
clock => counter_reg_bit[23].CLK
clock => counter_reg_bit[22].CLK
clock => counter_reg_bit[21].CLK
clock => counter_reg_bit[20].CLK
clock => counter_reg_bit[19].CLK
clock => counter_reg_bit[18].CLK
clock => counter_reg_bit[17].CLK
clock => counter_reg_bit[16].CLK
clock => counter_reg_bit[15].CLK
clock => counter_reg_bit[14].CLK
clock => counter_reg_bit[13].CLK
clock => counter_reg_bit[12].CLK
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= counter_reg_bit[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= counter_reg_bit[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= counter_reg_bit[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= counter_reg_bit[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= counter_reg_bit[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= counter_reg_bit[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= counter_reg_bit[18].DB_MAX_OUTPUT_PORT_TYPE
q[19] <= counter_reg_bit[19].DB_MAX_OUTPUT_PORT_TYPE
q[20] <= counter_reg_bit[20].DB_MAX_OUTPUT_PORT_TYPE
q[21] <= counter_reg_bit[21].DB_MAX_OUTPUT_PORT_TYPE
q[22] <= counter_reg_bit[22].DB_MAX_OUTPUT_PORT_TYPE
q[23] <= counter_reg_bit[23].DB_MAX_OUTPUT_PORT_TYPE
q[24] <= counter_reg_bit[24].DB_MAX_OUTPUT_PORT_TYPE
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN0
sload => _.IN1
sload => _.IN1


|g14_rotor_stepper_test_bed|g14_5_bit_comparator:middle_comparator
comp1[0] => Equal0.IN4
comp1[1] => Equal0.IN3
comp1[2] => Equal0.IN2
comp1[3] => Equal0.IN1
comp1[4] => Equal0.IN0
comp2[0] => Equal0.IN9
comp2[1] => Equal0.IN8
comp2[2] => Equal0.IN7
comp2[3] => Equal0.IN6
comp2[4] => Equal0.IN5
eq <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_5_bit_comparator:right_comparator
comp1[0] => Equal0.IN4
comp1[1] => Equal0.IN3
comp1[2] => Equal0.IN2
comp1[3] => Equal0.IN1
comp1[4] => Equal0.IN0
comp2[0] => Equal0.IN9
comp2[1] => Equal0.IN8
comp2[2] => Equal0.IN7
comp2[3] => Equal0.IN6
comp2[4] => Equal0.IN5
eq <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_rotor_stepper:rotor_stepper_fsm
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
keypress => state.OUTPUTSELECT
knock_m => process_0.IN0
knock_m => process_0.IN0
knock_m => process_0.IN0
knock_r => process_0.IN1
knock_r => process_0.IN1
knock_r => process_0.IN1
clk => state~9.DATAIN
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
init => state.OUTPUTSELECT
en_l <= en_l.DB_MAX_OUTPUT_PORT_TYPE
en_m <= en_m.DB_MAX_OUTPUT_PORT_TYPE
en_r <= en_r.DB_MAX_OUTPUT_PORT_TYPE
load <= load.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_counter_with_load:left_counter
clk => temp_count[0].CLK
clk => temp_count[1].CLK
clk => temp_count[2].CLK
clk => temp_count[3].CLK
clk => temp_count[4].CLK
load => temp_count[4].IN0
load_value[0] => temp_count[0].ADATA
load_value[1] => temp_count[1].ADATA
load_value[2] => temp_count[2].ADATA
load_value[3] => temp_count[3].ADATA
load_value[4] => temp_count[4].ADATA
reset => temp_count[0].ACLR
reset => temp_count[1].ACLR
reset => temp_count[2].ACLR
reset => temp_count[3].ACLR
reset => temp_count[4].ACLR
reset => temp_count[4].IN1
enable => temp_count[4].ENA
enable => temp_count[3].ENA
enable => temp_count[2].ENA
enable => temp_count[1].ENA
enable => temp_count[0].ENA
count[0] <= temp_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= temp_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= temp_count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= temp_count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= temp_count[4].DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_counter_with_load:middle_counter
clk => temp_count[0].CLK
clk => temp_count[1].CLK
clk => temp_count[2].CLK
clk => temp_count[3].CLK
clk => temp_count[4].CLK
load => temp_count[4].IN0
load_value[0] => temp_count[0].ADATA
load_value[1] => temp_count[1].ADATA
load_value[2] => temp_count[2].ADATA
load_value[3] => temp_count[3].ADATA
load_value[4] => temp_count[4].ADATA
reset => temp_count[0].ACLR
reset => temp_count[1].ACLR
reset => temp_count[2].ACLR
reset => temp_count[3].ACLR
reset => temp_count[4].ACLR
reset => temp_count[4].IN1
enable => temp_count[4].ENA
enable => temp_count[3].ENA
enable => temp_count[2].ENA
enable => temp_count[1].ENA
enable => temp_count[0].ENA
count[0] <= temp_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= temp_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= temp_count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= temp_count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= temp_count[4].DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_counter_with_load:right_counter
clk => temp_count[0].CLK
clk => temp_count[1].CLK
clk => temp_count[2].CLK
clk => temp_count[3].CLK
clk => temp_count[4].CLK
load => temp_count[4].IN0
load_value[0] => temp_count[0].ADATA
load_value[1] => temp_count[1].ADATA
load_value[2] => temp_count[2].ADATA
load_value[3] => temp_count[3].ADATA
load_value[4] => temp_count[4].ADATA
reset => temp_count[0].ACLR
reset => temp_count[1].ACLR
reset => temp_count[2].ACLR
reset => temp_count[3].ACLR
reset => temp_count[4].ACLR
reset => temp_count[4].IN1
enable => temp_count[4].ENA
enable => temp_count[3].ENA
enable => temp_count[2].ENA
enable => temp_count[1].ENA
enable => temp_count[0].ENA
count[0] <= temp_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= temp_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= temp_count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= temp_count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= temp_count[4].DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_7_segment_decoder:left_led_out
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[4] => Mux0.IN32
code[4] => Mux1.IN32
code[4] => Mux2.IN32
code[4] => Mux3.IN32
code[4] => Mux4.IN32
code[4] => Mux5.IN32
code[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_7_segment_decoder:middle_led_out
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[4] => Mux0.IN32
code[4] => Mux1.IN32
code[4] => Mux2.IN32
code[4] => Mux3.IN32
code[4] => Mux4.IN32
code[4] => Mux5.IN32
code[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g14_rotor_stepper_test_bed|g14_7_segment_decoder:right_led_out
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[4] => Mux0.IN32
code[4] => Mux1.IN32
code[4] => Mux2.IN32
code[4] => Mux3.IN32
code[4] => Mux4.IN32
code[4] => Mux5.IN32
code[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


